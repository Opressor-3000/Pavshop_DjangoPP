# Generated by Django 4.2.3 on 2023-08-23 15:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Brand')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brands',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=50, verbose_name='Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, parent_link='parents', related_name='parents', to='product.category')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Category_slug')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='product.brand')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'collection',
                'verbose_name_plural': 'collections',
                'ordering': ['brand_id'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Color')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='color_slug')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'color',
                'verbose_name_plural': 'colors',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Discont')),
                ('code', models.CharField(blank=True, max_length=50, unique=True)),
                ('amount', models.IntegerField(blank=True)),
                ('decrease_by', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('discount_size', models.DecimalField(decimal_places=2, max_digits=8)),
                ('date_begin', models.DateField()),
                ('date_end', models.DateField()),
                ('deleted_at', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'discont',
                'verbose_name_plural': 'disconts',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('image', models.ImageField(upload_to='blog_image/', verbose_name='Image')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='image', to=settings.AUTH_USER_MODEL, verbose_name='creater')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Product')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='fabric price')),
                ('views', models.IntegerField(blank=True, verbose_name='viewer')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('archive', models.BooleanField(default=False, verbose_name='Archived')),
                ('publised_at', models.BooleanField(default=True)),
                ('deleted_at', models.BooleanField(default=False)),
                ('brand_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brand', to='product.brand')),
                ('category_id', models.ManyToManyField(related_name='category', to='product.category')),
                ('collection_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collection', to='product.collection')),
                ('parent', models.ManyToManyField(blank=True, related_name='product_parent', to='product.product')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(default='Pavshop', max_length=50, unique=True)),
                ('address', models.CharField(max_length=100, unique=True)),
                ('post', models.CharField(blank=True, max_length=6)),
                ('location', models.CharField(blank=True, max_length=255, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'store',
                'verbose_name_plural': 'stores',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='variant')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Varian_slug')),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, verbose_name='price')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.color', verbose_name='color')),
                ('discount_id', models.ManyToManyField(to='product.discount', verbose_name='Discont')),
                ('image_id', models.ManyToManyField(to='product.image', verbose_name='Image')),
                ('parent', models.ManyToManyField(blank=True, related_name='variant_parent', to='product.variant')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('tag', models.ManyToManyField(related_name='variant_tag', to='product.tag')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='product.unit', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'variant',
                'verbose_name_plural': 'variants',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Style')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'style',
                'verbose_name_plural': 'styles',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('text', models.TextField()),
                ('rating', models.DecimalField(blank=True, decimal_places=3, max_digits=4)),
                ('published_at', models.BooleanField(default=False)),
                ('deleted_at', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productreview', to='product.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userreview', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'review',
                'verbose_name_plural': 'reviews',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='style_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='style', to='product.style'),
        ),
        migrations.AddField(
            model_name='product',
            name='tag',
            field=models.ManyToManyField(blank=True, related_name='product_tag', to='product.tag'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DiscountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Discont')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='discount',
            name='other_product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product'),
        ),
        migrations.AddField(
            model_name='discount',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='types', to='product.discounttype'),
        ),
        migrations.AddField(
            model_name='discount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Designer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Designer')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Varian_slug')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'designer',
                'verbose_name_plural': 'designers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VariantToStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('quantity', models.IntegerField(max_length=9)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variantinstore', to='product.store', verbose_name='store')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='varianttostore', to='product.variant', verbose_name='variant')),
            ],
            options={
                'verbose_name': 'variant to store',
                'verbose_name_plural': 'variant to stores',
                'ordering': ['store'],
                'unique_together': {('variant', 'store')},
            },
        ),
        migrations.AddConstraint(
            model_name='productreview',
            constraint=models.CheckConstraint(check=models.Q(('rating__lt', 5)), name='rating_data'),
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together={('title', 'brand_id')},
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('title', 'parent')},
        ),
    ]
